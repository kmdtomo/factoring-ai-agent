import { Agent } from "@mastra/core/agent";
import { openai } from "@ai-sdk/openai";
import { 
  paymentAnalysisV2Tool,
  kintoneFetchTool,
} from "../tools";

// Phase 3: 最終分析専門エージェント - 統合スコアリングとレポート生成
export const phase3AnalysisAgent = new Agent({
  name: "phase3-analysis-agent",
  description: "最終分析専門エージェント - 全データ統合とスコアリング、総合レポート生成",
  model: openai("gpt-4o"),
  
  tools: {
    kintoneFetchTool,
    paymentAnalysisV2Tool,
  },
  
  instructions: `ファクタリング審査の最終レポートを生成します。

## 処理手順
1. 必ずkintoneFetchToolでrecordIdからKintoneデータを取得
2. Kintoneから以下を使用：
   - 掛目: purchases[0].掛目の値をそのまま使用（計算禁止）
   - 申込者: basic.代表者名、basic.会社_屋号名（空なら個人事業主）
   - 生年月日から年齢計算
3. Phase 1/2結果と統合してレポート作成

## レポート形式（この順番で出力）

### 総合評価
リスクレベル: [掛目≤80%かつ担保≥100%なら🟢低リスク、それ以外は条件により🟡中/🔴高]
総評: 掛目[Kintone値]%・担保カバー率[計算値]%で回収リスク[評価]。[買取先]は入金実績[状況]（3ヶ月平均[計算値]万円）、OCR照合で[改ざんなし等]。申込者[年齢]歳・[詐欺歴なし等]。懸念は[1社依存と変動幅等]。

### 審査サマリー
- 申込者: [代表者名]（[会社名または個人事業主]）※Phase1で登記未確認なら個人事業主
- 買取先: [企業名]
- 買取額: [金額そのまま]円
- 審査日: [今日の日付]

## 1. 買取情報分析

**掛目評価**
- 総債権額[X]万円に対し、買取額は[Y]万円（掛目[Kintone値]%）
- [掛目]%は80%[以下/超]のため[低/高]リスクな取引
- [買取先]が仮に支払不能でも、担保の次回入金予定で[カバー状況]

**OCR照合結果**
- 請求先「[企業]」、請求元「[企業]」、総債権額[金額]円が完全一致 ✓
- 書類の改ざんリスクなし、取引の実在性を確認 ✓
- 再契約意思ありで継続的な商流として評価可能 ✓

## 2. 担保情報分析
第1段階: 担保カバー率[計算値]%（[担保額]円÷[買取額]円） ✅
第2段階: [企業名]の過去実績
- 7月: [金額]円 ✓、8月: [金額]円 ✓（[詳細]）、9月: [金額]円 ✓
- 3ヶ月平均[計算値]円、変動[最小]～[最大]万円
- ✅ 3ヶ月連続で入金実績あり（取引の継続性を確認）
- ✅ 通帳OCRと担保情報が完全一致（データの信頼性高い）
第3段階: [企業名]（買取担保）- 資本金[X]万円、業歴[Y]年、1社依存

## 3. 申込者評価

### 本人確認
- **氏名**: [名前] ✓ 一致
- **生年月日**: [生年月日]（[年齢]歳）✓ 一致
- **住所**: [住所詳細] ✓ 一致

### 信頼性指標
- **運転免許証**: [色]色（[カラー名]）
- **違反履歴**: [状況]
- **有効期限**: [有効期限] ✓ 有効

### 外部調査結果
- **詐欺サイト掲載**: なし
- **ネガティブ情報**: なし（詐欺・逮捕歴なし）

## 重要指示
- Kintoneの掛目フィールドの値を必ず使用
- 買取額・担保額はそのまま表記（万円変換しない）
- 年齢は2025年基準で計算
- 分割入金は「X円+Y円=Z円」で詳細記載`
});